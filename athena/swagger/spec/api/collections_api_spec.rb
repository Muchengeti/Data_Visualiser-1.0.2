=begin
#Figshare API

#Figshare apiv2. Using Swagger 2.0

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CollectionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CollectionsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CollectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectionsApi' do
    it 'should create an instance of CollectionsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CollectionsApi)
    end
  end

  # unit tests for collection_articles
  # Public Collection Articles
  # Returns a list of public collection articles
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. Used for pagination with page_size
  # @option opts [Integer] :page_size The number of results included on a page. Used for pagination with page
  # @option opts [Integer] :limit Number of results included on a page. Used for pagination with query
  # @option opts [Integer] :offset Where to start the listing(the offset of the first result). Used for pagination with limit
  # @return [Array<Article>]
  describe 'collection_articles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_details
  # Collection details
  # View a collection
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [CollectionComplete]
  describe 'collection_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_version_details
  # Collection Version details
  # View details for a certain version of a collection
  # @param collection_id Collection Unique identifier
  # @param version_id Version Number
  # @param [Hash] opts the optional parameters
  # @return [CollectionComplete]
  describe 'collection_version_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collection_versions
  # Collection Versions list
  # Returns a list of public collection Versions
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<Version>]
  describe 'collection_versions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_list
  # Public Collections
  # Returns a list of public collections
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. Used for pagination with page_size
  # @option opts [Integer] :page_size The number of results included on a page. Used for pagination with page
  # @option opts [Integer] :limit Number of results included on a page. Used for pagination with query
  # @option opts [Integer] :offset Where to start the listing(the offset of the first result). Used for pagination with limit
  # @option opts [String] :order The field by which to order. Default varies by endpoint/resource.
  # @option opts [String] :order_direction 
  # @option opts [Integer] :institution only return collections from this institution
  # @option opts [String] :published_since Filter by collection publishing date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD
  # @option opts [String] :modified_since Filter by collection modified date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD
  # @option opts [Integer] :group only return collections from this group
  # @option opts [String] :resource_doi only return collections with this resource_doi
  # @option opts [String] :doi only return collections with this doi
  # @return [Array<Collection>]
  describe 'collections_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_search
  # Public Collections Search
  # Returns a list of public collections
  # @param [Hash] opts the optional parameters
  # @option opts [CollectionSearch] :search Search Parameters
  # @return [Array<Collection>]
  describe 'collections_search test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_article_delete
  # Delete collection article
  # De-associate article from collection
  # @param collection_id Collection unique identifier
  # @param article_id Collection article unique identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_article_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_articles_add
  # Add collection articles
  # Associate new articles with the collection. This will add new articles to the list of already associated articles
  # @param collection_id Collection unique identifier
  # @param articles Articles list
  # @param [Hash] opts the optional parameters
  # @return [Location]
  describe 'private_collection_articles_add test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_articles_list
  # List collection articles
  # List collection articles
  # @param collection_id Collection unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<Article>]
  describe 'private_collection_articles_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_articles_replace
  # Replace collection articles
  # Associate new articles with the collection. This will remove all already associated articles and add these new ones
  # @param collection_id Collection unique identifier
  # @param articles Articles List
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_articles_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_author_delete
  # Delete collection author
  # Delete collection author
  # @param collection_id Collection unique identifier
  # @param author_id Collection Author unique identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_author_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_authors_add
  # Add collection authors
  # Associate new authors with the collection. This will add new authors to the list of already associated authors
  # @param collection_id Collection unique identifier
  # @param authors List of authors
  # @param [Hash] opts the optional parameters
  # @return [Location]
  describe 'private_collection_authors_add test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_authors_list
  # List collection authors
  # List collection authors
  # @param collection_id Collection unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<Author>]
  describe 'private_collection_authors_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_authors_replace
  # Replace collection authors
  # Associate new authors with the collection. This will remove all already associated authors and add these new ones
  # @param collection_id Collection unique identifier
  # @param authors List of authors
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_authors_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_categories_add
  # Add collection categories
  # Associate new categories with the collection. This will add new categories to the list of already associated categories
  # @param collection_id Collection unique identifier
  # @param categories Categories list
  # @param [Hash] opts the optional parameters
  # @return [Location]
  describe 'private_collection_categories_add test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_categories_list
  # List collection categories
  # List collection categories
  # @param collection_id Collection unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<Category>]
  describe 'private_collection_categories_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_categories_replace
  # Replace collection categories
  # Associate new categories with the collection. This will remove all already associated categories and add these new ones
  # @param collection_id Collection unique identifier
  # @param categories Categories list
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_categories_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_category_delete
  # Delete collection category
  # De-associate category from collection
  # @param collection_id Collection unique identifier
  # @param category_id Collection category unique identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_category_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_create
  # Create collection
  # Create a new Collection by sending collection information
  # @param collection Collection description
  # @param [Hash] opts the optional parameters
  # @return [CollectionComplete]
  describe 'private_collection_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_delete
  # Delete collection
  # Delete n collection
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_details
  # Collection details
  # View a collection
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [CollectionComplete]
  describe 'private_collection_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_private_link_create
  # Create collection private link
  # Create new private link
  # @param collection_id Collection unique identifier
  # @param [Hash] opts the optional parameters
  # @option opts [CollectionPrivateLinkCreator] :private_link 
  # @return [Location]
  describe 'private_collection_private_link_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_private_link_delete
  # Disable private link
  # Disable/delete private link for this collection
  # @param collection_id Collection unique identifier
  # @param link_id Private link token
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_private_link_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_private_link_update
  # Update collection private link
  # Update existing private link for this collection
  # @param collection_id Collection unique identifier
  # @param link_id Private link token
  # @param [Hash] opts the optional parameters
  # @option opts [CollectionPrivateLinkCreator] :private_link 
  # @return [nil]
  describe 'private_collection_private_link_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_private_links_list
  # List collection private links
  # List article private links
  # @param collection_id Collection unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<PrivateLink>]
  describe 'private_collection_private_links_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_publish
  # Private Collection Publish
  # When a collection is published, a new public version will be generated. Any further updates to the collection will affect the private collection data. In order to make these changes publicly visible, an explicit publish operation is needed.
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [Location]
  describe 'private_collection_publish test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_reserve_doi
  # Private Collection Reserve DOI
  # Reserve DOI for collection
  # @param collection_id Collection Unique identifier
  # @param [Hash] opts the optional parameters
  # @return [ArticleDOI]
  describe 'private_collection_reserve_doi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collection_update
  # Update collection
  # Update collection details
  # @param collection_id Collection Unique identifier
  # @param collection Collection description
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'private_collection_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collections_list
  # Private Collections List
  # List private collections
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. Used for pagination with page_size
  # @option opts [Integer] :page_size The number of results included on a page. Used for pagination with page
  # @option opts [Integer] :limit Number of results included on a page. Used for pagination with query
  # @option opts [Integer] :offset Where to start the listing(the offset of the first result). Used for pagination with limit
  # @option opts [String] :order The field by which to order. Default varies by endpoint/resource.
  # @option opts [String] :order_direction 
  # @return [Array<Collection>]
  describe 'private_collections_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for private_collections_search
  # Private Collections Search
  # Returns a list of private Collections
  # @param search Search Parameters
  # @param [Hash] opts the optional parameters
  # @return [Array<Collection>]
  describe 'private_collections_search test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
